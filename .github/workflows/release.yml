# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    tags:
      - v*.*.*

jobs:
  get-versions:
    runs-on: ubuntu-latest
    name: "Retrieve Minecraft Version"
    outputs:
      minecraft_version: ${{ steps.retrieveMinecraftVersion.outputs.minecraft_version }}
      mod_version: ${{ steps.retrieveModVersion.outputs.mod_version }}
    steps:
      - uses: actions/checkout@v4

      - id: retrieveMinecraftVersion
        name: "Retrieve Minecraft Version"
        run: echo "minecraft_version=$(grep 'minecraft_version=' gradle.properties | cut -d "=" -f 2)" >> "$GITHUB_OUTPUT"
      - id: retrieveModVersion
        name: "Retrieve CreateColonies Version"
        run: |
          gitRef="${{ github.ref }}"
          tagName=$(echo "${gitRef/refs\/tags\//}")
          echo "mod_version=${tagName/v/}" >> "$GITHUB_OUTPUT"
  build:
    needs: ["get-versions"]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          cache-read-only: false

      - name: Build with Gradle Wrapper
        run: ./gradlew --build-cache build -Pmod_version=${{ needs.get-versions.outputs.mod_version }}

      - name: Create Github Release
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Version ${{ needs.get-versions.outputs.mod_version }}
          draft: false
          prerelease: false
      - name: Upload Mod
        id: uploadMod
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createRelease.outputs.upload_url }}
          asset_path: ./build/libs/createcolonies-${{ needs.get-versions.outputs.mod_version }}.jar
          asset_name: CreateColonies-${{ needs.get-versions.outputs.mod_version }}-${{ needs.get-versions.outputs.minecraft_version }}.jar
          asset_content_type: application/java-archive

      # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
      # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
      #
      # - name: Setup Gradle
      #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      #   with:
      #     gradle-version: '8.9'
      #
      # - name: Build with Gradle 8.9
      #   run: gradle build
